path <- "C:\\Users\\fakoy\\OneDrive - Houston Community College\\UTD_Courses\\Fall2024\\Data_Analysis_withR\\HW4"
setwd(path)
getwd()
setwd(path)
library(ggplot2)
library(tidyr)
df <- read.csv(file = path, header = T)
library(ggplot2)
library(tidyr)
df <- read.csv(file = path, header = T)
df <- read.csv(file = path, header = T)
path <- "C:\\Users\\fakoy\\OneDrive - Houston Community College\\UTD_Courses\\Fall2024\\Data_Analysis_withR\\HW4"
setwd(path)
library(ggplot2)
library(tidyr)
df <- read.csv(file = path, header = T)
df <- read.csv(file = "train.csv", header = T)
head(file)
head(df)
df %>%
ggplot(data = ., mapping = aes(x = battery_power, y = ram, colour = price_range))
df %>%
ggplot(data = ., mapping = aes(x = battery_power, y = ram, colour = price_range)) +
geom_point()
# 1b:
scatter_plot +
geom_smooth()
# 1a: scatterplot between battery_power vs ram
scatter_plot <- df %>%
ggplot(data = ., mapping = aes(x = battery_power, y = ram, colour = price_range)) +
geom_point()
# 1b:
scatter_plot +
geom_smooth()
?geom_smooth
# 1a: scatterplot between battery_power vs ram
scatter_plot <- df %>%
ggplot(data = .,
mapping =
aes(x = ram, y = battery_power, colour = price_range)) +
geom_point()
# 1b:
scatter_plot +
geom_smooth()
?geom_smooth
# 1b:
scatter_plot +
geom_smooth()
?geom_smooth
# 1a: scatterplot between battery_power vs ram
scatter_plot <- df %>%
ggplot(data = .,
mapping =
aes(x = ram, y = battery_power, colour = price_range)) +
geom_point()
# 1b:
scatter_plot +
geom_smooth()
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x')
# a
mobile_data$price_range <- as.factor(mobile_data$price_range)
mobile_data <- read.csv("train.csv")
head(mobile_data)
names(mobile_data)
str(mobile_data)
# a
mobile_data$price_range <- as.factor(mobile_data$price_range)
str(mobile_data)
# b: scatter plot between battery_power vs ram
p <- ggplot(mobile_data,
mapping = aes(x = ram,
y = battery_power,
colour = price_range))
p +
geom_point(alpha=0.7, size=3) +
xlab("RAM") +
ylab("Battery Power") +
ggtitle("Scatter plot of Battery Power vs RAM") +
theme(plot.title = element_text(hjust = 0.5),
legend.justification = c(1, 1))
# c
mobile_data_pearson <- cor(x = mobile_data$ram,
y = mobile_data$battery_power,
method = 'pearson')
mobile_data_pearson
# d
mul_dfs <-
mobile_data %>%
group_by(price_range) %>%
group_split()
p +
geom_point(alpha=0.7, size=3) +
xlab("RAM") +
ylab("Battery Power") +
ggtitle("Scatter plot of Battery Power vs RAM") +
theme(plot.title = element_text(hjust = 0.5),
legend.justification = c(1, 1)) +
geom_smooth(fill=NA,
method = 'loess',
formula = 'y ~ x') +
coord_cartesian(ylim=c(500,2000))
str(mobile_data)
aes(x = ram, y = battery_power, colour = as.factor(price_range)) +
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x')
?geom_smooth
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x')
aes(x = ram, y = battery_power, color = as.factor(price_range)) +
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x')
# 1a: scatterplot between battery_power vs ram
scatter_plot <- df %>%
ggplot(data = .,
mapping =
aes(x = ram, y = battery_power, color = as.factor(price_range))) +
geom_point()
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x')
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x',
fill = NA)
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(scale = "free")
?scale
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x',
fill = NA)
coord_cartesian()
coord_cartesian(ylim(min(battery_power), max(battery_power)))
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim(min(battery_power), max(battery_power)))
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim(min(df$battery_power), max(df$battery_power)))
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim(round(min(df$battery_power), 2), round(max(df$battery_power), 2)))
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim= c(round(min(df$battery_power), 2), round(max(df$battery_power), 2)))
# 1a: scatterplot between battery_power vs ram
base_plot <- df %>%
ggplot(data = .,
mapping =
aes(x = ram, y = battery_power, color = as.factor(price_range)))
scatter_plot <- base_plot +
geom_point()
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2)))
rm(scatter_plot)
# 1a: scatterplot between battery_power vs ram
base_plot <- df %>%
ggplot(data = .,
mapping =
aes(x = ram, y = battery_power, color = as.factor(price_range)))
scatter_plot <- base_plot +
geom_point()
scatter_plot
# 1b:
scatter_plot +
geom_smooth(method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2)))
# 1c
scatter_plot
# 1c
density_curve <- base_plot +
geom_density()
densi
density_curve
# 1c
density_curve <- base_plot +
geom_density(mapping = aes(x = ram))
density_curve
# 1c
density_curve <- base_plot +
geom_density(mapping = aes(x = ram, colour = as.factor(price_range)))
density_curve
# 1a: scatterplot between battery_power vs ram
base_plot <- df %>%
ggplot(data = .,
mapping =
aes(x = ram, color = as.factor(price_range)))
scatter_plot <- base_plot +
geom_point(mapping = aes( y = battery_power))
scatter_plot
# 1b:
scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2)))
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2)))
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2)))
# 1c
density_curve <- base_plot +
geom_density())
# 1c
density_curve <- base_plot +
geom_density()
density_curve
?aes
#1d: boxplots in one plot
boxplots <- base_plot +
geom_boxplot()
boxplots
# 1e:
violin <- base_plot +
geom_violin()
violin
?geom_violin
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.justification = c(1, 1))
scatter_plot_w_trend
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.justification = c(1, 0))
scatter_plot_w_trend
?legend.justification
??legend.justification
?theme
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.justification = "inside")
scatter_plot_w_trend
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "inside")
scatter_plot_w_trend
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "inside",
legend.justification.inside = c(1, 1))
scatter_plot_w_trend
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top",
legend.justification.inside = c(1, 1))
scatter_plot_w_trend
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top",
legend.justification.inside = c(1, 1),
legend.location = "panel")
scatter_plot_w_trend
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top",
legend.justification.inside = c(1, 1))
scatter_plot_w_trend
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top",
legend.justification.inside = c(1, 1),
legend.location = "panel")
scatter_plot_w_trend
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "right",
legend.justification.inside = c(1, 1),
legend.location = "panel")
scatter_plot_w_trend
# 1b:
scatter_plot_w_trend <- scatter_plot +
geom_smooth(mapping = aes( y = battery_power),
method = 'loess',
formula = 'y ~ x',
fill = NA) +
coord_cartesian(ylim=
c(round(min(df$battery_power), 2),
round(max(df$battery_power), 2))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c("top", "right"),
legend.justification.inside = c(1, 1),
legend.location = "panel")
scatter_plot_w_trend
# 1c: density curves in one plot
density_curve <- base_plot + geom_density()
rm(list=ls())
graphics.off()
# Install and load packages
library(tibble)
library(dplyr)
library(tidyr)
library(ggplot2)
library(hflights)
# 2.1: Table - tibble
# some built in tables are in ggplot2
ggplot2::diamonds
class(ggplot2::diamonds)
ggplot2::economics
class(ggplot2::economics)
# hflights data set:
hflights::hflights
class(hflights::hflights) # is a dataframe
# ----------------------------------------------------------------------
# CREATE A TIBBLE
as_tibble(hflights)
# 2.2: Create tibble:
# as_tibble(dataframe_or_commaSeparated_vectors):
class(hflights)
df_tibble <- as_tibble(hflights)
class(df_tibble)
# convert a custom dataframe
df <- data.frame(x = 1:10,
y = seq.Date(from = "2021-01-01",
to = "2021-01-10",
by = "day"))
by = "day")
# convert a custom dataframe
df <- data.frame(x = 1:10,
y = seq.Date(from = as.Date("2021-01-01"),
to = as.Date("2021-01-10"),
by = "day"))
df
class(df)
dft <- tibble(df)
dft
dft1 <- as.tibble(df)
dft1 <- as_tibble(df)
dft1
class(dft, df1)
class(dft, dft1)
class(dft)
class(dft1)
# tibble
tibble(v1 = seq(from = 1, to = 100, by = 1))
# tibble
tibble(v1 = seq(from = 1, to = 100, by = 1),
v2 = pi,
v3 = sqrt(v1),
v4 = seq.Date(from = as.Date("2021-01-01"),
length.out = 100,
by = "day"))
seq.Date(from = as.Date("2021-01-01"),
length.out = 100,
by = "day")
#
tibble(`123` = 123,
`.` = "period",
`,` = "comma",
`*/-+` = "strange name")
# tribble()
tribble(~name, ~surname, ~male, ~age, # tbl header
"John", "Altair", T, 32, # tibble values
"Max", "Smith", T, 35,
"Lily", "Brown",F, 27
)
?tribble
?tibble
# tibble
tibble1 <- tibble(v1 = seq(from = 1, to = 100, by = 1),
v2 = pi,
v3 = sqrt(v1),
v4 = seq.Date(from = as.Date("2021-01-01"),
length.out = 100,
by = "day"))
t(tibble1)
t?
#
tibble(`123` = 123,
`.` = "period",
`,` = "comma",
`*/-+` = "strange name")
?t
tibble1 %>%
t()
tibble1 %>%
t() %>%
as.tibble()
